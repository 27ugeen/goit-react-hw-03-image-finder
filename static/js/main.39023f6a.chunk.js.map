{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Spinner/Spinner.js","components/Notification/Notification.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/imagesApi.js","components/App.js","index.js"],"names":["Searchbar","state","inputValue","props","handleChange","target","setState","value","handleSubmit","e","preventDefault","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","defaultProps","Spinner","color","height","width","Notification","message","ImageGalleryItem","images","onSetLargeImage","map","id","webformatURL","largeImageURL","key","onClick","src","alt","ImageGallery","Button","onLoadMore","Modal","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","children","URL","API_KEY","fetchImagesWithQuery","query","a","page","requestParams","fetch","resp","json","hits","App","loading","error","searchQuery","largeImage","fetchImages","imagesApi","then","prevState","catch","finally","handleSearchFormSubmit","setLargeImage","url","closeModal","prevProps","prevQuery","nextQuery","prevImages","nextImages","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.39023f6a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n  static defaultProps = {\r\n    inputValue: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    inputValue: PropTypes.string.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    inputValue: this.props.inputValue,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      inputValue: target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className=\"Searchbar\">\r\n          <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n              value={this.state.inputValue}\r\n              onChange={this.handleChange}\r\n            />\r\n          </form>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Spinner = () => (\r\n  <div className=\"Spinner\">\r\n    <Loader type=\"Bars\" color=\"#3f51b5\" height={50} width={50} />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{`Error: ${message}`}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ images, onSetLargeImage }) => (\r\n  <>\r\n    {images.map(({ id, webformatURL, largeImageURL }) => (\r\n      <li\r\n        key={id}\r\n        className=\"ImageGalleryItem\"\r\n        onClick={() => onSetLargeImage(largeImageURL)}\r\n      >\r\n        <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n      </li>\r\n    ))}\r\n  </>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onSetLargeImage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ images, onSetLargeImage }) => (\r\n  <ul className=\"ImageGallery\">\r\n    <ImageGalleryItem images={images} onSetLargeImage={onSetLargeImage} />\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onSetLargeImage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onLoadMore }) => (\r\n  <div className=\"Spinner\">\r\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\r\n      Load more...\r\n    </button>\r\n  </div>\r\n);\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"Overlay\">\r\n          <div className=\"Modal\">{this.props.children}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","const URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '14594113-3565582ddf884392468dadf7f';\r\n\r\nconst fetchImagesWithQuery = async (query, page = 1) => {\r\n  const requestParams = `?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`;\r\n  const resp = await fetch(URL + requestParams);\r\n  const { hits } = await resp.json();\r\n  return hits;\r\n};\r\n\r\nexport default { fetchImagesWithQuery };\r\n","import React, { Component } from 'react';\r\nimport Searchbar from './Searchbar';\r\nimport Spinner from './Spinner';\r\nimport Notification from './Notification';\r\nimport ImageGallery from './ImageGallery';\r\nimport Button from './Button';\r\nimport Modal from './Modal';\r\nimport imagesApi from '../services/imagesApi';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class App extends Component {\r\n  static defaultProps = {\r\n    images: [],\r\n    loading: false,\r\n    error: '',\r\n    searchQuery: '',\r\n    page: 1,\r\n    largeImage: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    images: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string.isRequired,\r\n    searchQuery: PropTypes.string.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    largeImage: PropTypes.string.isRequired,\r\n  };\r\n\r\n  state = {\r\n    images: this.props.images,\r\n    loading: this.props.loading,\r\n    error: this.props.error,\r\n    searchQuery: this.props.searchQuery,\r\n    page: this.props.page,\r\n    largeImage: this.props.largeImage,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevState.searchQuery;\r\n    const nextQuery = this.state.searchQuery;\r\n    const prevImages = prevState.images;\r\n    const nextImages = this.state.images;\r\n\r\n    if (prevQuery !== nextQuery) {\r\n      this.fetchImages();\r\n    }\r\n\r\n    if (prevImages !== nextImages) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, page } = this.state;\r\n\r\n    this.setState({ loading: true });\r\n    imagesApi\r\n      .fetchImagesWithQuery(searchQuery, page)\r\n      .then(images =>\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...images],\r\n          page: prevState.page + 1,\r\n        })),\r\n      )\r\n      .catch(({ message }) => this.setState({ error: message }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  handleSearchFormSubmit = query => {\r\n    this.setState({\r\n      images: [],\r\n      searchQuery: query,\r\n      page: 1,\r\n    });\r\n  };\r\n\r\n  setLargeImage = url => {\r\n    this.setState({ largeImage: url });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ largeImage: '' });\r\n  };\r\n\r\n  render() {\r\n    const { images, loading, error, largeImage } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <Searchbar onSubmit={this.handleSearchFormSubmit} />\r\n          {error && <Notification message={error} />}\r\n          {images.length > 0 && (\r\n            <ImageGallery\r\n              images={images}\r\n              onSetLargeImage={this.setLargeImage}\r\n            />\r\n          )}\r\n          {loading && <Spinner />}\r\n          {images.length > 0 && !loading && (\r\n            <Button onLoadMore={this.fetchImages} />\r\n          )}\r\n        </div>\r\n        {largeImage && (\r\n          <Modal onClose={this.closeModal}>\r\n            <img src={largeImage} alt=\"\" />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}